// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Vite
// plugin that tells the Electron app where to look for the Vite-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_VITE_DEV_SERVER_URL: string;
declare const MAIN_WINDOW_VITE_NAME: string;

// Preload types
interface ThemeModeContext {
  toggle: () => Promise<boolean>;
  dark: () => Promise<void>;
  light: () => Promise<void>;
  system: () => Promise<boolean>;
  current: () => Promise<"dark" | "light" | "system">;
}

interface ElectronWindow {
  minimize: () => Promise<void>;
  maximize: () => Promise<void>;
  fullscreen: (value: boolean) => Promise<void>;
  close: () => Promise<void>;
}

interface EnvironmentInfo {
  qitechOs: boolean;
  qitechOsGitTimestamp?: Date;
  qitechOsGitCommit?: string;
  qitechOsGitAbbreviation?: string;
  qitechOsGitUrl?: string;
}

interface EnvironmentContext {
  getInfo: () => Promise<EnvironmentInfo>;
}

interface UpdateContext {
  execute: (params: {
    githubRepoOwner: string;
    githubRepoName: string;
    githubToken?: string;
    tag?: string;
    branch?: string;
    commit?: string;
  }) => Promise<void>;
  onLog: (callback: (log: string) => void) => void;
  onEnd: (
    callback: (params: { success: boolean; error?: string }) => void,
  ) => void;
}

declare interface Window {
  themeMode: ThemeModeContext;
  electronWindow: ElectronWindow;
  environment: EnvironmentContext;
  update: UpdateContext;
}
